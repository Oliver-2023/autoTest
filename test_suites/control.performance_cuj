# Copyright 2021 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = "abergman, chromeos-engprod-platform-syd"
NAME = "performance_cuj"
PURPOSE = "Tast wrapper suite for running performance CUJ Tast tests on Moblab."
TIME = "LONG"
TEST_CATEGORY = "General"
TEST_CLASS = "suite"
TEST_TYPE = "Server"

DOC = """
This suite executes a set of performance CUJ (critical user journey) test cases.
Supposed to be run by partners (OEMs, ODMs) using Moblab.

@param build: The name of the image to test.
          Ex: x86-mario-release/R17-1412.33.0-a1-b29
@param board: The board to test on. Ex: x86-mario
@param pool: The pool of machines to utilize for scheduling. If pool=None
             board is used.
@param dry_run: simulate test execution without stressing the storage.
@param SKIP_IMAGE: (optional) If present and True, don't re-image devices.
"""

import common
import json
import logging
import tempfile
from six.moves import urllib
import yaml

from autotest_lib.client.common_lib.cros import dev_server
from autotest_lib.server.cros.dynamic_suite import dynamic_suite

vars_file = '/tmp/performance_cuj_vars.yaml'

test_args = dict()
test_args['test_version'] = 1

def parse_config(config_url):
  response = urllib.urlopen(config_url)
  vars = json.loads(response.read())
  for key in vars:
    test_args[key] = vars[key]
  logging.info('Read %d values from remote configuration.', length(vars))

if 'devserver_url' in globals():
  ds = dev_server.ImageServer(devserver_url)
  gs_bucket = dev_server._get_image_storage_server()
  if gs_bucket:
    config_path = 'config/perf_cuj/'
    config_file = 'perf_cuj.config'
    archive_url = gs_bucket + config_path
    logging.info('Staging configuration from %s.', gs_bucket)
    ds.stage_artifacts(build,
                       archive_url = archive_url,
                       files = [config_file])
    logging.info('Parsing configuration from %s.', archive_url)
    parse_config(devserver_url + '/static/' + config_path + config_file)

with open(vars_file, 'w') as file:
  yaml.dump(test_args, stream=file, default_flow_style=False)

args_dict['name'] = NAME
args_dict['job'] = job
args_dict['vars_file'] = vars_file

dynamic_suite.reimage_and_run(**args_dict)
