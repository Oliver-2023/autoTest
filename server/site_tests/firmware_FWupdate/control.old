# Copyright 2014 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = "ChromeOS Team"
NAME = "firmware_FWupdate.old"
METADATA = {
    "contacts": ["chromeos-faft@google.com", "jbettis@chromium.org"],
    "bug_component": "b:792402",  # ChromeOS > Platform > Enablement > Firmware > FAFT
    "criteria": "RO+RW firmware update using chromeos-firmwareupdate --mode=recovery",
}
TIME = "MEDIUM"
TEST_TYPE = "server"
DEPENDENCIES = "servo_state:WORKING"

DOC = """
RO+RW firmware update using chromeos-firmwareupdate --mode=recovery
This variant is RO=old, RW=old (useful for comparing without changing args).

Required arguments:
    test_that ... --args "new_bios=/path/to/new.bin \
                          servo_host=my_servo_host \
			  servo_port=my_servo_port"

The *_bios arguments can also be split into separate _bios_ro and _bios_rw args.
"""

from autotest_lib.client.common_lib import utils

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)


def run_firmwareupdate(machine):
    # Setup the client machine.
    host = hosts.create_host(machine, servo_args=servo_args)
    job.run_test(
        "firmware_FWupdate",
        test_name=NAME,
        host=host,
        cmdline_args=args,
        tag="old",
    )


parallel_simple(run_firmwareupdate, machines)
