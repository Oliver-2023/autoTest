# Copyright 2022 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = "kimjae, Chromium OS"
NAME = "autoupdate_DeferredUpdate.full"
TIME = "MEDIUM"
PURPOSE = "Tests deferred update."
TEST_CATEGORY = "Functional"
TEST_CLASS = "platform"
TEST_TYPE = "server"
ATTRIBUTES = "suite:au-perbuild"
PY_VERSION = 3
DOC = """
Tests that the DUT handles deferred updates.

Deferred updates allow an update to be deferred, meaning that the inactive
slots of both firmware and OS will hold valid updates, but not be set to the
active slots.

Deferred updates only apply on periodic update checks, hence it's required to
schedule periodic update checks using (test-update-check-internal-timeout).
This is because interactive update policy checks are a higher priority in the
policy precedence.
"""

from autotest_lib.client.common_lib import utils

args_dict = utils.args_to_dict(args)

def run(machine):
    host = hosts.create_host(machine)
    job.run_test('autoupdate_DeferredUpdate', host=host,
                 **args_dict)

job.parallel_simple(run, machines)
