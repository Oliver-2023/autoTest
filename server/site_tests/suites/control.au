# Copyright (c) 2011 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = "Chrome OS Team"
NAME = "Auto Update Smoke Test"
TIME = "SHORT"
TEST_CATEGORY = "Functional"
TEST_CLASS = "suite"
TEST_TYPE = "server"

DOC = """
This is a special control file used by the autoupdate (AU) test scheduler. It
requires a target update URL be provided in order to run.

The test relies on Autotest to image the machine to the proper base image prior
to execution. The target machine is then imaged to the target version and a
basic smoke test is run to verify functionality.
"""
import os
from autotest_lib.server import autoserv_parser


# suite_Smoke client control file.
CLIENT_CONTROL = "client/site_tests/suite_Smoke/control"


def run_client_test(machine):
    host = hosts.create_host(machine)

    # Image the machine with the requested build. Run it as a test instead of
    # directly in the control file so useful log information is collected.
    update_url = "%(update_url)s"
    if job.run_test("autoupdate", host=host, update_url=update_url,
                    disable_sysinfo=True):
        # Let the rest of Autotest know about the new update. Necessary to make
        # sure test packages are served from the correct version. AU URLs are
        # suffixed with ".../au/<build>" which must be stripped since the test
        # packages are located at the image root.
        autoserv_parser.autoserv_parser.options.image = (
            update_url.rstrip('/').rsplit('/', 2)[0])

        # Execute client control file.
        autotest.Autotest(host).run(os.path.join(job.autodir, CLIENT_CONTROL))


job.parallel_on_machines(run_client_test, machines)
