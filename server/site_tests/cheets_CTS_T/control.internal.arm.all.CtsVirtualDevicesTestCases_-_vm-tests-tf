# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file has been automatically generated. Do not edit!
from autotest_lib.client.common_lib import utils, global_config
import pipes

AUTHOR = 'n/a'
NAME = 'cheets_CTS_T.internal.arm.all.CtsVirtualDevicesTestCases_-_vm-tests-tf'
METADATA = {
    "contacts": ["arc-cts-eng@google.com"],
    "bug_component": "b:183644",
    "criteria": "A part of Android CTS",
}
ATTRIBUTES = 'suite:arc-cts-qual'
DEPENDENCIES = 'arc'
JOB_RETRIES = 1
TEST_TYPE = 'server'
TIME = 'MEDIUM'
MAX_RESULT_SIZE_KB = 512000
DOC = 'n/a'

def run_TS(machine):
    host_list = [hosts.create_host(machine)]
    ssid = utils.get_wireless_ssid(machine['hostname'])
    if machine['hostname'].startswith('chromeos8'):
        ssid = 'wl-ChromeOS_lab_AP'
    wifipass = global_config.global_config.get_config_value('CLIENT',
                'wireless_password', default=None)
    job.run_test(
        'cheets_CTS_T',
        hosts=host_list,
        iterations=1,
        max_retry=9,
        tag='internal.arm.all.CtsVirtualDevicesTestCases_-_vm-tests-tf',
        test_name='cheets_CTS_T.internal.arm.all.CtsVirtualDevicesTestCases_-_vm-tests-tf',
        run_template=['run', 'commandAndExit', 'cts', '--include-filter', 'CtsVirtualDevicesTestCases', '--include-filter', 'CtsVirtualDevicesTestCases[instant]', '--include-filter', 'CtsVirtualDevicesTestCases[secondary_user]', '--include-filter', 'CtsVoiceInteractionTestCases', '--include-filter', 'CtsVoiceInteractionTestCases[instant]', '--include-filter', 'CtsVoiceInteractionTestCases[secondary_user]', '--include-filter', 'CtsVoiceRecognitionTestCases', '--include-filter', 'CtsVoiceRecognitionTestCases[secondary_user]', '--include-filter', 'CtsVoiceSettingsTestCases', '--include-filter', 'CtsVoiceSettingsTestCases[instant]', '--include-filter', 'CtsVoiceSettingsTestCases[secondary_user]', '--include-filter', 'CtsVrTestCases', '--include-filter', 'CtsVrTestCases[secondary_user]', '--include-filter', 'CtsWallpaperEffectsGenerationServiceTestCases', '--include-filter', 'CtsWallpaperEffectsGenerationServiceTestCases[secondary_user]', '--include-filter', 'CtsWebkitTestCases', '--include-filter', 'CtsWebkitTestCases[instant]', '--include-filter', 'CtsWebkitTestCases[secondary_user]', '--include-filter', 'CtsWidgetTestCases', '--include-filter', 'CtsWidgetTestCases29', '--include-filter', 'CtsWidgetTestCases29[instant]', '--include-filter', 'CtsWidgetTestCases29[secondary_user]', '--include-filter', 'CtsWidgetTestCases[instant]', '--include-filter', 'CtsWidgetTestCases[secondary_user]', '--include-filter', 'CtsWifiAwareTestCases', '--include-filter', 'CtsWifiBroadcastsHostTestCases', '--include-filter', 'CtsWifiBroadcastsHostTestCases[instant]', '--include-filter', 'CtsWifiBroadcastsHostTestCases[secondary_user]', '--include-filter', 'CtsWifiTestCases', '--include-filter', 'CtsWifiTestCases[secondary_user]', '--include-filter', 'CtsWindowManagerDeviceTestCases', '--include-filter', 'CtsWindowManagerDeviceTestCases[secondary_user]', '--include-filter', 'CtsWindowManagerJetpackTestCases', '--include-filter', 'CtsWindowManagerJetpackTestCases[secondary_user]', '--include-filter', 'CtsWindowManagerSdk25TestCases', '--include-filter', 'CtsWindowManagerSdk25TestCases[secondary_user]', '--include-filter', 'CtsWindowManagerSdk28TestCases', '--include-filter', 'CtsWindowManagerSdk28TestCases[secondary_user]', '--include-filter', 'CtsWindowManagerSdk29TestCases', '--include-filter', 'CtsWindowManagerSdk29TestCases[secondary_user]', '--include-filter', 'CtsWrapNoWrapTestCases', '--include-filter', 'CtsWrapNoWrapTestCases[secondary_user]', '--include-filter', 'CtsWrapWrapDebugMallocDebugTestCases', '--include-filter', 'CtsWrapWrapDebugMallocDebugTestCases[secondary_user]', '--include-filter', 'CtsWrapWrapDebugTestCases', '--include-filter', 'CtsWrapWrapDebugTestCases[secondary_user]', '--include-filter', 'CtsWrapWrapNoDebugTestCases', '--include-filter', 'CtsWrapWrapNoDebugTestCases[secondary_user]', '--include-filter', 'MicrodroidHostTestCases', '--include-filter', 'MicrodroidHostTestCases[secondary_user]', '--include-filter', 'MicrodroidTestApp', '--include-filter', 'MicrodroidTestApp[secondary_user]', '--include-filter', 'ResourceObserverNativeTest', '--include-filter', 'ResourceObserverNativeTest[instant]', '--include-filter', 'ResourceObserverNativeTest[secondary_user]', '--include-filter', 'art-run-test-048-reflect-v8', '--include-filter', 'art-run-test-048-reflect-v8[secondary_user]', '--include-filter', 'art_libnativebridge_cts_tests', '--include-filter', 'art_libnativebridge_cts_tests[secondary_user]', '--include-filter', 'art_standalone_dex2oat_cts_tests', '--include-filter', 'art_standalone_dex2oat_cts_tests[secondary_user]', '--include-filter', 'art_standalone_libartpalette_tests', '--include-filter', 'art_standalone_libartpalette_tests[secondary_user]', '--include-filter', 'art_standalone_libdexfile_external_tests', '--include-filter', 'art_standalone_libdexfile_external_tests[secondary_user]', '--include-filter', 'libnativeloader_test', '--include-filter', 'libnativeloader_test[secondary_user]', '--include-filter', 'odsign_e2e_tests', '--include-filter', 'signed-CtsOmapiTestCases', '--include-filter', 'signed-CtsOmapiTestCases[secondary_user]', '--include-filter', 'signed-CtsSecureElementAccessControlTestCases1', '--include-filter', 'signed-CtsSecureElementAccessControlTestCases1[secondary_user]', '--include-filter', 'signed-CtsSecureElementAccessControlTestCases2', '--include-filter', 'signed-CtsSecureElementAccessControlTestCases2[secondary_user]', '--include-filter', 'signed-CtsSecureElementAccessControlTestCases3', '--include-filter', 'signed-CtsSecureElementAccessControlTestCases3[secondary_user]', '--include-filter', 'vm-tests-tf', '--include-filter', 'vm-tests-tf[secondary_user]', '--logcat-on-failure'],
        retry_template=['run', 'commandAndExit', 'retry', '--retry', '{session_id}'],
        target_module='all.CtsVirtualDevicesTestCases_-_vm-tests-tf',
        target_plan=None,
        bundle='arm',
        uri='LATEST',
        precondition_commands=['adb shell cmd wifi add-network %s %s %s' % (pipes.quote(ssid), 'open' if wifipass == '' else 'wpa', pipes.quote(wifipass)), 'adb shell cmd wifi connect-network %s' % pipes.quote(ssid), 'adb shell dumpsys wifi transports -eth'],
        timeout=172800)

parallel_simple(run_TS, machines)
