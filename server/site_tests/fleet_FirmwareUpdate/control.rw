# Copyright 2021 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

NAME = "fleet_FirmwareUpdate"
METADATA = {
    "contacts": ["chrome-fleet-software@google.com", "xianuowang@google.com"],
    "bug_component": "b:916058",
    "criteria": "Check if regular firmware update workflow works correctly.",
}
ATTRIBUTES = "suite:fleet_firmware_update"
TEST_TYPE = "server"

"""
This test is designed to simulate the same firmware update behavior that
a ChromeOS user would have. We don't need OS update since it should be handled
by prejob(provision) already. And this test will update OS bundled firmware(RW only)
from the DUT and doing some post-update validation. The test includes below steps:

1. Pre-update validation.
2. Update DUT to OS bundled firmware via /usr/sbin/chromeos-firmwareupdate(RW only).
3. Reboot.
4. Post-update validation.
"""


def run(machine):
    host = hosts.create_host(machine)
    job.run_test('fleet_FirmwareUpdate', host=host)

job.parallel_simple(run, machines)