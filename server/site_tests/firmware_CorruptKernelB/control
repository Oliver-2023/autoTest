# Copyright 2011 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# TODO(b/290823172) Remove this file when the test is no longer in any
# PVS plan

from autotest_lib.server import utils

AUTHOR = "ChromeOS Team"
NAME = "firmware_CorruptKernelB"
METADATA = {
    "contacts": ["chromeos-faft@google.com", "jbettis@chromium.org"],
    "bug_component": "b:792402",  # ChromeOS > Platform > Enablement > Firmware > FAFT
    "criteria": "Servo based kernel B corruption test",
}
DEPENDENCIES = "servo_state:WORKING"
TIME = "SHORT"
TEST_TYPE = "server"
JOB_RETRIES = 0

DOC = """
This test sets kernel B boot and then corrupts kernel B. The firmware
verifies kernel B failed so falls back to kernel A boot. This test will
fail if kernel verification mis-behaved.
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)


def run_corruptkernelb(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    job.run_test(
        "firmware_CorruptKernelB",
        host=host,
        cmdline_args=args,
        disable_sysinfo=True,
        dev_mode=False,
    )


parallel_simple(run_corruptkernelb, machines)
