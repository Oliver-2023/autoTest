# Copyright 2020 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = 'Manal Lubbadeh <manal.lubbadeh@exalt.ps>'
NAME = 'bluetooth_AdapterSRHealth.sr_while_discovering.floss'
PURPOSE = (
    'Verify discovering is restored after suspend/resume '
    'with and without setting discovery filter'
)
CRITERIA = 'Pass test'
ATTRIBUTES = 'suite:bluetooth_floss_flaky'
TIME = 'SHORT'
TEST_CATEGORY = 'Functional'
TEST_CLASS = 'bluetooth'
TEST_TYPE = 'server'
DEPENDENCIES = 'bluetooth, working_bluetooth_btpeer:1'
PY_VERSION = 3

DOC = """
Verify the DUT's discoverable behavior during suspend and after resume
with and without setting a discovery filter.

Test Discovery without setting discovery filter:
1. Get current time to use it in the resume as start time
2. Start discovering
3. Suspend the DUT.
4. Resume the DUT.
5. Expect discovering to restore after suspend/resume

Test discovery with discovery filter set:
1. Get current time to use it in the resume as start time
2. Set discovery filter (Transport:Auto)
3. Start discovering
4. Suspend the DUT
5. Resume the DUT
6. Expect discovering to restore after suspend/resume
"""

args_dict = utils.args_to_dict(args)

def run(machine):
    host = hosts.create_host(machine)
    job.run_test('bluetooth_AdapterSRHealth', host=host, num_iterations=1,
                 args_dict=args_dict, test_name=NAME.split('.')[1], floss=True)

parallel_simple(run, machines)
