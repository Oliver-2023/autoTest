# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = 'chromeos-chameleon'
NAME = 'bluetooth_AdapterLEAdvertising'
PURPOSE = 'Test bluetooth adapter advertising.'
CRITERIA = 'Adapter should advertise with correct parameters.'
ATTRIBUTES = 'suite:bluetooth, suite:bluetooth_sanity'
TIME = 'SHORT'
TEST_CATEGORY = 'Functional'
TEST_CLASS = 'bluetooth'
TEST_TYPE = 'server'
DEPENDENCIES = 'bluetooth'

DOC = """
Verify that the bluetooth adapter of the DUT could behave as a bluetooth
low-energy device and advertise with correct data and parameters.

Specifically, the following subtests are executed in this autotest.
    - test_register_advertisement
    - test_set_advertising_intervals
    - test_reset_advertising
"""


ADVERTISEMENT_DATA = {
    'Path': '/org/bluez/test/advertisement1',
    'Type': 'peripheral',
    'ManufacturerData': {'0xfff1': [0x1a, 0x1b, 0x1c, 0x1d, 0x1e]},
    'ServiceUUIDs': ['180D', '180F'],
    'SolicitUUIDs': [],
    'ServiceData': {'9991': [0x11, 0x12, 0x13, 0x14, 0x15]},
    'IncludeTxPower': True}

MIN_ADV_INTERVAL_MS = 210
MAX_ADV_INTERVAL_MS = 210

args_dict = utils.args_to_dict(args)

def run(machine):
    host = hosts.create_host(machine)
    job.run_test('bluetooth_AdapterLEAdvertising', host=host,
                 advertisement_data=ADVERTISEMENT_DATA,
                 min_adv_interval_ms=MIN_ADV_INTERVAL_MS,
                 max_adv_interval_ms=MAX_ADV_INTERVAL_MS)

parallel_simple(run, machines)
