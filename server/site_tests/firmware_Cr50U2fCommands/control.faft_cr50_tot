# Copyright 2019 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "louiscollard,apronin"
NAME = "firmware_Cr50U2fCommands.faft_cr50_tot"
METADATA = {
        "contacts": ["chromeos-faft@google.com", "louiscollard@chromium.org", "apronin@chromium.org"],
        "bug_component": "b:792402", # ChromeOS > Platform > Enablement > Firmware > FAFT
        "criteria": "Test U2F functionality in cr50"
}
ATTRIBUTES = "suite:faft_cr50_tot"
TIME = "SHORT"
TEST_TYPE = "server"
DEPENDENCIES = "servo_state:WORKING"

DOC = """
Tests basic key generation and signing U2F commands.

This test is applicable when using ToT cr50 module.
TODO(crbug.com/1014572) Drop this control file once suites can inject test args.
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

# crbug.com/1014572: Inject test args.
args_dict['tot_test_run'] = 'true'

def run_test(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    iterations = int(args_dict.get("iterations", 1))
    job.run_test('firmware_Cr50U2fCommands', host=host, cmdline_args=args,
                 iterations=iterations, tag='faft_cr50_tot')

parallel_simple(run_test, machines)
